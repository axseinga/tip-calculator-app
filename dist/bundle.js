!function(){"use strict";var t,e,n={},i={};function r(t){var e=i[t];if(void 0!==e)return e.exports;var s=i[t]={id:t,exports:{}};return n[t](s,s.exports,r),s.exports}r.m=n,r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,{a:e}),e},r.d=function(t,e){for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.f={},r.e=function(t){return Promise.all(Object.keys(r.f).reduce((function(e,n){return r.f[n](t,e),e}),[]))},r.u=function(t){return t+".bundle.js"},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},t={},e="tip-calculator-app-main:",r.l=function(n,i,s,o){if(t[n])t[n].push(i);else{var u,l;if(void 0!==s)for(var a=document.getElementsByTagName("script"),c=0;c<a.length;c++){var p=a[c];if(p.getAttribute("src")==n||p.getAttribute("data-webpack")==e+s){u=p;break}}u||(l=!0,(u=document.createElement("script")).charset="utf-8",u.timeout=120,r.nc&&u.setAttribute("nonce",r.nc),u.setAttribute("data-webpack",e+s),u.src=n),t[n]=[i];var d=function(e,i){u.onerror=u.onload=null,clearTimeout(h);var r=t[n];if(delete t[n],u.parentNode&&u.parentNode.removeChild(u),r&&r.forEach((function(t){return t(i)})),e)return e(i)},h=setTimeout(d.bind(null,void 0,{type:"timeout",target:u}),12e4);u.onerror=d.bind(null,u.onerror),u.onload=d.bind(null,u.onload),l&&document.head.appendChild(u)}},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.p="",function(){r.b=document.baseURI||self.location.href;var t={179:0};r.f.j=function(e,n){var i=r.o(t,e)?t[e]:void 0;if(0!==i)if(i)n.push(i[2]);else{var s=new Promise((function(n,r){i=t[e]=[n,r]}));n.push(i[2]=s);var o=r.p+r.u(e),u=new Error;r.l(o,(function(n){if(r.o(t,e)&&(0!==(i=t[e])&&(t[e]=void 0),i)){var s=n&&("load"===n.type?"missing":n.type),o=n&&n.target&&n.target.src;u.message="Loading chunk "+e+" failed.\n("+s+": "+o+")",u.name="ChunkLoadError",u.type=s,u.request=o,i[1](u)}}),"chunk-"+e,e)}};var e=function(e,n){var i,s,o=n[0],u=n[1],l=n[2],a=0;for(i in u)r.o(u,i)&&(r.m[i]=u[i]);for(l&&l(r),e&&e(n);a<o.length;a++)s=o[a],r.o(t,s)&&t[s]&&t[s][0](),t[o[a]]=0},n=self.webpackChunktip_calculator_app_main=self.webpackChunktip_calculator_app_main||[];n.forEach(e.bind(null,0)),n.push=e.bind(null,n.push.bind(n))}();class s{constructor(){if(!this.vars())return!1;this.setupEvents()}vars(){return this.selectors={resetBtn:".calc-output__reset",billBtn:".calc-input__input-bill",peopleBtn:".calc-input__input-people",radioInputsBtns:".calc-input__selection",customInputBtn:".calc-input__textarea",fieldset:".calc-input__tip-percentage",tipAmountDisplay:".calc-output__tip-display",totalAmountDisplay:".calc-output__total-display"},this.resetBtn=document.querySelector(this.selectors.resetBtn),this.billBtn=document.querySelector(this.selectors.billBtn),this.peopleBtn=document.querySelector(this.selectors.peopleBtn),this.radioInputsBtns=document.querySelectorAll(this.selectors.radioInputsBtns),this.customInputBtn=document.querySelector(this.selectors.customInputBtn),this.fieldset=document.querySelector(this.selectors.fieldset),this.tipAmountDisplay=document.querySelector(this.selectors.tipAmountDisplay),this.totalAmountDisplay=document.querySelector(this.selectors.totalAmountDisplay),!!(this.resetBtn&&this.billBtn&&this.peopleBtn&&this.radioInputsBtns&&this.customInputBtn&&this.fieldset&&this.tipAmountDisplay&&this.totalAmountDisplay)}setupEvents(){this.resetBtn.addEventListener("click",(()=>{this.reset()})),this.billBtn.addEventListener("input",(()=>{this.calculate(this.getPct())})),this.peopleBtn.addEventListener("input",(()=>{this.calculate(this.getPct())})),Array.from(this.radioInputsBtns).forEach((t=>t.addEventListener("click",(()=>{this.calculate(this.getPct())})))),this.customInputBtn.addEventListener("input",(()=>{this.customButton();const t=this.customInputBtn.value;this.calculate(t)}))}calculate(t){const e=Number(this.getBill()),n=Number(t),i=Number(this.getPeople()),r=this.calcTip(e,n,i),s=this.calcTotal(e,n,i);this.displayTip(r),this.displayTotal(s)}getBill(){const t=this.billBtn.value;return""===t||NaN===t||"undefined"===t?0:t}getPct(){const[t]=Array.from(this.radioInputsBtns).filter((t=>!0===t.checked));if(t)return t.getAttribute("value");if(!t){const t=this.fieldset.lastElementChild.lastElementChild.value;return""!==t?t:0}}getPeople(){const t=this.peopleBtn.value;return""===t?0:t}customButton(){this.radioInputsBtns.forEach((t=>t.checked=!1))}calcTip(t,e,n){if(0===e||0===n)return 0;{const i=t*e/100/n;return Math.round(100*i)/100}}calcTotal(t,e,n){if(0===t)return 0;if(0===n||""===n)return+t;if(0===e&&n>0){const e=+t/+n;return Math.round(100*e)/100}if(0===n&&e>0)return 0;if(0===e&&0===n)return 0;{const i=t/n+ +this.calcTip(+t,+e,+n);return Math.round(100*i)/100}}convertToDisplay(t){return t.toFixed(Math.max(((t+"").split(".")[1]||"").length,2))}displayTip(t){const e=this.convertToDisplay(t);this.tipAmountDisplay.innerText=`$${e}`}displayTotal(t){const e=this.convertToDisplay(t);this.totalAmountDisplay.innerText=`$${e}`}reset(){this.billBtn.value="",this.radioInputsBtns.forEach((t=>t.checked=!1)),this.customInputBtn.value="",this.peopleBtn.value="",this.tipAmountDisplay.innerText="$0.00",this.totalAmountDisplay.innerText="$0.00"}}r.e(3).then(r.bind(r,3)),document.addEventListener("DOMContentLoaded",(function(){new s}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUV0QixPQURjLEVBSWxCLEdBQVksSUFBUkEsR0FBd0IsSUFBWEMsRUFFYixPQURjLEVBRVgsQ0FDSCxNQUNNSSxFQUFRUixFQUFPSSxJQURUM0IsS0FBSzhCLFNBQVNQLEdBQU9HLEdBQU1DLEdBR3ZDLE9BRG1CYyxLQUFLQyxNQUFjLElBQVJYLEdBQWUsS0FLckRZLGlCQUFpQkMsR0FJYixPQUhlQSxFQUFJQyxRQUNmSixLQUFLSyxNQUFNRixFQUFNLElBQUlHLE1BQU0sS0FBSyxJQUFNLElBQUl6RyxPQUFRLElBSzFEMkYsV0FBV0osR0FDUCxNQUFNbUIsRUFBYWhELEtBQUsyQyxpQkFBaUJkLEdBQ3pDN0IsS0FBS1UsaUJBQWlCdUMsVUFBWSxJQUFJRCxJQUcxQ2QsYUFBYUgsR0FDVCxNQUFNbUIsRUFBZWxELEtBQUsyQyxpQkFBaUJaLEdBQzNDL0IsS0FBS1csbUJBQW1Cc0MsVUFBWSxJQUFJQyxJQUc1Q25DLFFBQ0lmLEtBQUtLLFFBQVFsQyxNQUFRLEdBQ3JCNkIsS0FBS08sZ0JBQWdCL0MsU0FBUzRELEdBQVdBLEVBQU1rQixTQUFVLElBQ3pEdEMsS0FBS1EsZUFBZXJDLE1BQVEsR0FDNUI2QixLQUFLTSxVQUFVbkMsTUFBUSxHQUN2QjZCLEtBQUtVLGlCQUFpQnVDLFVBQVksUUFDbENqRCxLQUFLVyxtQkFBbUJzQyxVQUFZLFNDekw1Qyx5QkFJQTlHLFNBQVMyRSxpQkFBaUIsb0JBRTFCLFdBQ3VCLElBQUloQixLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlwLWNhbGN1bGF0b3ItYXBwLW1haW4vd2VicGFjay9ydW50aW1lL2xvYWQgc2NyaXB0Iiwid2VicGFjazovL3RpcC1jYWxjdWxhdG9yLWFwcC1tYWluL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RpcC1jYWxjdWxhdG9yLWFwcC1tYWluL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RpcC1jYWxjdWxhdG9yLWFwcC1tYWluL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90aXAtY2FsY3VsYXRvci1hcHAtbWFpbi93ZWJwYWNrL3J1bnRpbWUvZW5zdXJlIGNodW5rIiwid2VicGFjazovL3RpcC1jYWxjdWxhdG9yLWFwcC1tYWluL3dlYnBhY2svcnVudGltZS9nZXQgamF2YXNjcmlwdCBjaHVuayBmaWxlbmFtZSIsIndlYnBhY2s6Ly90aXAtY2FsY3VsYXRvci1hcHAtbWFpbi93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RpcC1jYWxjdWxhdG9yLWFwcC1tYWluL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vdGlwLWNhbGN1bGF0b3ItYXBwLW1haW4vd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdGlwLWNhbGN1bGF0b3ItYXBwLW1haW4vd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vdGlwLWNhbGN1bGF0b3ItYXBwLW1haW4vLi9zcmMvanMvY2FsYy5qcyIsIndlYnBhY2s6Ly90aXAtY2FsY3VsYXRvci1hcHAtbWFpbi8uL3NyYy9qcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaW5Qcm9ncmVzcyA9IHt9O1xudmFyIGRhdGFXZWJwYWNrUHJlZml4ID0gXCJ0aXAtY2FsY3VsYXRvci1hcHAtbWFpbjpcIjtcbi8vIGxvYWRTY3JpcHQgZnVuY3Rpb24gdG8gbG9hZCBhIHNjcmlwdCB2aWEgc2NyaXB0IHRhZ1xuX193ZWJwYWNrX3JlcXVpcmVfXy5sID0gZnVuY3Rpb24odXJsLCBkb25lLCBrZXksIGNodW5rSWQpIHtcblx0aWYoaW5Qcm9ncmVzc1t1cmxdKSB7IGluUHJvZ3Jlc3NbdXJsXS5wdXNoKGRvbmUpOyByZXR1cm47IH1cblx0dmFyIHNjcmlwdCwgbmVlZEF0dGFjaDtcblx0aWYoa2V5ICE9PSB1bmRlZmluZWQpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBzY3JpcHRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgcyA9IHNjcmlwdHNbaV07XG5cdFx0XHRpZihzLmdldEF0dHJpYnV0ZShcInNyY1wiKSA9PSB1cmwgfHwgcy5nZXRBdHRyaWJ1dGUoXCJkYXRhLXdlYnBhY2tcIikgPT0gZGF0YVdlYnBhY2tQcmVmaXggKyBrZXkpIHsgc2NyaXB0ID0gczsgYnJlYWs7IH1cblx0XHR9XG5cdH1cblx0aWYoIXNjcmlwdCkge1xuXHRcdG5lZWRBdHRhY2ggPSB0cnVlO1xuXHRcdHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuXG5cdFx0c2NyaXB0LmNoYXJzZXQgPSAndXRmLTgnO1xuXHRcdHNjcmlwdC50aW1lb3V0ID0gMTIwO1xuXHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm5jKSB7XG5cdFx0XHRzY3JpcHQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgX193ZWJwYWNrX3JlcXVpcmVfXy5uYyk7XG5cdFx0fVxuXHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXdlYnBhY2tcIiwgZGF0YVdlYnBhY2tQcmVmaXggKyBrZXkpO1xuXHRcdHNjcmlwdC5zcmMgPSB1cmw7XG5cdH1cblx0aW5Qcm9ncmVzc1t1cmxdID0gW2RvbmVdO1xuXHR2YXIgb25TY3JpcHRDb21wbGV0ZSA9IGZ1bmN0aW9uKHByZXYsIGV2ZW50KSB7XG5cdFx0Ly8gYXZvaWQgbWVtIGxlYWtzIGluIElFLlxuXHRcdHNjcmlwdC5vbmVycm9yID0gc2NyaXB0Lm9ubG9hZCA9IG51bGw7XG5cdFx0Y2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuXHRcdHZhciBkb25lRm5zID0gaW5Qcm9ncmVzc1t1cmxdO1xuXHRcdGRlbGV0ZSBpblByb2dyZXNzW3VybF07XG5cdFx0c2NyaXB0LnBhcmVudE5vZGUgJiYgc2NyaXB0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcblx0XHRkb25lRm5zICYmIGRvbmVGbnMuZm9yRWFjaChmdW5jdGlvbihmbikgeyByZXR1cm4gZm4oZXZlbnQpOyB9KTtcblx0XHRpZihwcmV2KSByZXR1cm4gcHJldihldmVudCk7XG5cdH1cblx0O1xuXHR2YXIgdGltZW91dCA9IHNldFRpbWVvdXQob25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHVuZGVmaW5lZCwgeyB0eXBlOiAndGltZW91dCcsIHRhcmdldDogc2NyaXB0IH0pLCAxMjAwMDApO1xuXHRzY3JpcHQub25lcnJvciA9IG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCBzY3JpcHQub25lcnJvcik7XG5cdHNjcmlwdC5vbmxvYWQgPSBvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgc2NyaXB0Lm9ubG9hZCk7XG5cdG5lZWRBdHRhY2ggJiYgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpO1xufTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0ZnVuY3Rpb24oKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG5cdFx0ZnVuY3Rpb24oKSB7IHJldHVybiBtb2R1bGU7IH07XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBkZWZpbml0aW9uKSB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZiA9IHt9O1xuLy8gVGhpcyBmaWxlIGNvbnRhaW5zIG9ubHkgdGhlIGVudHJ5IGNodW5rLlxuLy8gVGhlIGNodW5rIGxvYWRpbmcgZnVuY3Rpb24gZm9yIGFkZGl0aW9uYWwgY2h1bmtzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmUgPSBmdW5jdGlvbihjaHVua0lkKSB7XG5cdHJldHVybiBQcm9taXNlLmFsbChPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLmYpLnJlZHVjZShmdW5jdGlvbihwcm9taXNlcywga2V5KSB7XG5cdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5mW2tleV0oY2h1bmtJZCwgcHJvbWlzZXMpO1xuXHRcdHJldHVybiBwcm9taXNlcztcblx0fSwgW10pKTtcbn07IiwiLy8gVGhpcyBmdW5jdGlvbiBhbGxvdyB0byByZWZlcmVuY2UgYXN5bmMgY2h1bmtzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnUgPSBmdW5jdGlvbihjaHVua0lkKSB7XG5cdC8vIHJldHVybiB1cmwgZm9yIGZpbGVuYW1lcyBiYXNlZCBvbiB0ZW1wbGF0ZVxuXHRyZXR1cm4gXCJcIiArIGNodW5rSWQgKyBcIi5idW5kbGUuanNcIjtcbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqLCBwcm9wKSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTsgfSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQxNzk6IDBcbn07XG5cbl9fd2VicGFja19yZXF1aXJlX18uZi5qID0gZnVuY3Rpb24oY2h1bmtJZCwgcHJvbWlzZXMpIHtcblx0XHQvLyBKU09OUCBjaHVuayBsb2FkaW5nIGZvciBqYXZhc2NyaXB0XG5cdFx0dmFyIGluc3RhbGxlZENodW5rRGF0YSA9IF9fd2VicGFja19yZXF1aXJlX18ubyhpbnN0YWxsZWRDaHVua3MsIGNodW5rSWQpID8gaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdIDogdW5kZWZpbmVkO1xuXHRcdGlmKGluc3RhbGxlZENodW5rRGF0YSAhPT0gMCkgeyAvLyAwIG1lYW5zIFwiYWxyZWFkeSBpbnN0YWxsZWRcIi5cblxuXHRcdFx0Ly8gYSBQcm9taXNlIG1lYW5zIFwiY3VycmVudGx5IGxvYWRpbmdcIi5cblx0XHRcdGlmKGluc3RhbGxlZENodW5rRGF0YSkge1xuXHRcdFx0XHRwcm9taXNlcy5wdXNoKGluc3RhbGxlZENodW5rRGF0YVsyXSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpZih0cnVlKSB7IC8vIGFsbCBjaHVua3MgaGF2ZSBKU1xuXHRcdFx0XHRcdC8vIHNldHVwIFByb21pc2UgaW4gY2h1bmsgY2FjaGVcblx0XHRcdFx0XHR2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkgeyBpbnN0YWxsZWRDaHVua0RhdGEgPSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSBbcmVzb2x2ZSwgcmVqZWN0XTsgfSk7XG5cdFx0XHRcdFx0cHJvbWlzZXMucHVzaChpbnN0YWxsZWRDaHVua0RhdGFbMl0gPSBwcm9taXNlKTtcblxuXHRcdFx0XHRcdC8vIHN0YXJ0IGNodW5rIGxvYWRpbmdcblx0XHRcdFx0XHR2YXIgdXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5wICsgX193ZWJwYWNrX3JlcXVpcmVfXy51KGNodW5rSWQpO1xuXHRcdFx0XHRcdC8vIGNyZWF0ZSBlcnJvciBiZWZvcmUgc3RhY2sgdW53b3VuZCB0byBnZXQgdXNlZnVsIHN0YWNrdHJhY2UgbGF0ZXJcblx0XHRcdFx0XHR2YXIgZXJyb3IgPSBuZXcgRXJyb3IoKTtcblx0XHRcdFx0XHR2YXIgbG9hZGluZ0VuZGVkID0gZnVuY3Rpb24oZXZlbnQpIHtcblx0XHRcdFx0XHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhpbnN0YWxsZWRDaHVua3MsIGNodW5rSWQpKSB7XG5cdFx0XHRcdFx0XHRcdGluc3RhbGxlZENodW5rRGF0YSA9IGluc3RhbGxlZENodW5rc1tjaHVua0lkXTtcblx0XHRcdFx0XHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtEYXRhICE9PSAwKSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rRGF0YSkge1xuXHRcdFx0XHRcdFx0XHRcdHZhciBlcnJvclR5cGUgPSBldmVudCAmJiAoZXZlbnQudHlwZSA9PT0gJ2xvYWQnID8gJ21pc3NpbmcnIDogZXZlbnQudHlwZSk7XG5cdFx0XHRcdFx0XHRcdFx0dmFyIHJlYWxTcmMgPSBldmVudCAmJiBldmVudC50YXJnZXQgJiYgZXZlbnQudGFyZ2V0LnNyYztcblx0XHRcdFx0XHRcdFx0XHRlcnJvci5tZXNzYWdlID0gJ0xvYWRpbmcgY2h1bmsgJyArIGNodW5rSWQgKyAnIGZhaWxlZC5cXG4oJyArIGVycm9yVHlwZSArICc6ICcgKyByZWFsU3JjICsgJyknO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9yLm5hbWUgPSAnQ2h1bmtMb2FkRXJyb3InO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9yLnR5cGUgPSBlcnJvclR5cGU7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3IucmVxdWVzdCA9IHJlYWxTcmM7XG5cdFx0XHRcdFx0XHRcdFx0aW5zdGFsbGVkQ2h1bmtEYXRhWzFdKGVycm9yKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5sKHVybCwgbG9hZGluZ0VuZGVkLCBcImNodW5rLVwiICsgY2h1bmtJZCwgY2h1bmtJZCk7XG5cdFx0XHRcdH0gZWxzZSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSAwO1xuXHRcdFx0fVxuXHRcdH1cbn07XG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG52YXIgd2VicGFja0pzb25wQ2FsbGJhY2sgPSBmdW5jdGlvbihwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbiwgZGF0YSkge1xuXHR2YXIgY2h1bmtJZHMgPSBkYXRhWzBdO1xuXHR2YXIgbW9yZU1vZHVsZXMgPSBkYXRhWzFdO1xuXHR2YXIgcnVudGltZSA9IGRhdGFbMl07XG5cdC8vIGFkZCBcIm1vcmVNb2R1bGVzXCIgdG8gdGhlIG1vZHVsZXMgb2JqZWN0LFxuXHQvLyB0aGVuIGZsYWcgYWxsIFwiY2h1bmtJZHNcIiBhcyBsb2FkZWQgYW5kIGZpcmUgY2FsbGJhY2tcblx0dmFyIG1vZHVsZUlkLCBjaHVua0lkLCBpID0gMDtcblx0Zm9yKG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcblx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubVttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG5cdFx0fVxuXHR9XG5cdGlmKHJ1bnRpbWUpIHZhciByZXN1bHQgPSBydW50aW1lKF9fd2VicGFja19yZXF1aXJlX18pO1xuXHRpZihwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbikgcGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24oZGF0YSk7XG5cdGZvcig7aSA8IGNodW5rSWRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0Y2h1bmtJZCA9IGNodW5rSWRzW2ldO1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhpbnN0YWxsZWRDaHVua3MsIGNodW5rSWQpICYmIGluc3RhbGxlZENodW5rc1tjaHVua0lkXSkge1xuXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKCk7XG5cdFx0fVxuXHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkc1tpXV0gPSAwO1xuXHR9XG5cbn1cblxudmFyIGNodW5rTG9hZGluZ0dsb2JhbCA9IHNlbGZbXCJ3ZWJwYWNrQ2h1bmt0aXBfY2FsY3VsYXRvcl9hcHBfbWFpblwiXSA9IHNlbGZbXCJ3ZWJwYWNrQ2h1bmt0aXBfY2FsY3VsYXRvcl9hcHBfbWFpblwiXSB8fCBbXTtcbmNodW5rTG9hZGluZ0dsb2JhbC5mb3JFYWNoKHdlYnBhY2tKc29ucENhbGxiYWNrLmJpbmQobnVsbCwgMCkpO1xuY2h1bmtMb2FkaW5nR2xvYmFsLnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjay5iaW5kKG51bGwsIGNodW5rTG9hZGluZ0dsb2JhbC5wdXNoLmJpbmQoY2h1bmtMb2FkaW5nR2xvYmFsKSk7IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FsY3VsYXRvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIGlmICghdGhpcy52YXJzKCkpIHJldHVybiBmYWxzZTtcbiAgICAgICAgdGhpcy5zZXR1cEV2ZW50cygpO1xuICAgIH1cblxuICAgIHZhcnMoKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0b3JzID0ge1xuICAgICAgICAgICAgcmVzZXRCdG46IFwiLmNhbGMtb3V0cHV0X19yZXNldFwiLFxuICAgICAgICAgICAgYmlsbEJ0bjogXCIuY2FsYy1pbnB1dF9faW5wdXQtYmlsbFwiLFxuICAgICAgICAgICAgcGVvcGxlQnRuOiBcIi5jYWxjLWlucHV0X19pbnB1dC1wZW9wbGVcIixcbiAgICAgICAgICAgIHJhZGlvSW5wdXRzQnRuczogXCIuY2FsYy1pbnB1dF9fc2VsZWN0aW9uXCIsXG4gICAgICAgICAgICBjdXN0b21JbnB1dEJ0bjogXCIuY2FsYy1pbnB1dF9fdGV4dGFyZWFcIixcbiAgICAgICAgICAgIGZpZWxkc2V0OiBcIi5jYWxjLWlucHV0X190aXAtcGVyY2VudGFnZVwiLFxuICAgICAgICAgICAgdGlwQW1vdW50RGlzcGxheTogXCIuY2FsYy1vdXRwdXRfX3RpcC1kaXNwbGF5XCIsXG4gICAgICAgICAgICB0b3RhbEFtb3VudERpc3BsYXk6IFwiLmNhbGMtb3V0cHV0X190b3RhbC1kaXNwbGF5XCIsXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5yZXNldEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5zZWxlY3RvcnMucmVzZXRCdG4pO1xuICAgICAgICB0aGlzLmJpbGxCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuc2VsZWN0b3JzLmJpbGxCdG4pO1xuICAgICAgICB0aGlzLnBlb3BsZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5zZWxlY3RvcnMucGVvcGxlQnRuKTtcbiAgICAgICAgdGhpcy5yYWRpb0lucHV0c0J0bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFxuICAgICAgICAgICAgdGhpcy5zZWxlY3RvcnMucmFkaW9JbnB1dHNCdG5zXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMuY3VzdG9tSW5wdXRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAgICAgdGhpcy5zZWxlY3RvcnMuY3VzdG9tSW5wdXRCdG5cbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5maWVsZHNldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5zZWxlY3RvcnMuZmllbGRzZXQpO1xuICAgICAgICB0aGlzLnRpcEFtb3VudERpc3BsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAgICAgdGhpcy5zZWxlY3RvcnMudGlwQW1vdW50RGlzcGxheVxuICAgICAgICApO1xuICAgICAgICB0aGlzLnRvdGFsQW1vdW50RGlzcGxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgICB0aGlzLnNlbGVjdG9ycy50b3RhbEFtb3VudERpc3BsYXlcbiAgICAgICAgKTtcblxuICAgICAgICBpZiAoXG4gICAgICAgICAgICAhdGhpcy5yZXNldEJ0biB8fFxuICAgICAgICAgICAgIXRoaXMuYmlsbEJ0biB8fFxuICAgICAgICAgICAgIXRoaXMucGVvcGxlQnRuIHx8XG4gICAgICAgICAgICAhdGhpcy5yYWRpb0lucHV0c0J0bnMgfHxcbiAgICAgICAgICAgICF0aGlzLmN1c3RvbUlucHV0QnRuIHx8XG4gICAgICAgICAgICAhdGhpcy5maWVsZHNldCB8fFxuICAgICAgICAgICAgIXRoaXMudGlwQW1vdW50RGlzcGxheSB8fFxuICAgICAgICAgICAgIXRoaXMudG90YWxBbW91bnREaXNwbGF5XG4gICAgICAgIClcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgc2V0dXBFdmVudHMoKSB7XG4gICAgICAgIHRoaXMucmVzZXRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYmlsbEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jYWxjdWxhdGUodGhpcy5nZXRQY3QoKSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnBlb3BsZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jYWxjdWxhdGUodGhpcy5nZXRQY3QoKSk7XG4gICAgICAgIH0pO1xuICAgICAgICBBcnJheS5mcm9tKHRoaXMucmFkaW9JbnB1dHNCdG5zKS5mb3JFYWNoKChpbnB1dCkgPT5cbiAgICAgICAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWxjdWxhdGUodGhpcy5nZXRQY3QoKSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICApO1xuICAgICAgICB0aGlzLmN1c3RvbUlucHV0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmN1c3RvbUJ1dHRvbigpO1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmN1c3RvbUlucHV0QnRuLnZhbHVlO1xuICAgICAgICAgICAgdGhpcy5jYWxjdWxhdGUodmFsdWUpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjYWxjdWxhdGUoY2FsY1BjdEZuKSB7XG4gICAgICAgIGNvbnN0IGJpbGwgPSBOdW1iZXIodGhpcy5nZXRCaWxsKCkpO1xuICAgICAgICBjb25zdCBwY3QgPSBOdW1iZXIoY2FsY1BjdEZuKTtcbiAgICAgICAgY29uc3QgcGVvcGxlID0gTnVtYmVyKHRoaXMuZ2V0UGVvcGxlKCkpO1xuICAgICAgICBjb25zdCB0aXAgPSB0aGlzLmNhbGNUaXAoYmlsbCwgcGN0LCBwZW9wbGUpO1xuICAgICAgICBjb25zdCB0b3RhbCA9IHRoaXMuY2FsY1RvdGFsKGJpbGwsIHBjdCwgcGVvcGxlKTtcbiAgICAgICAgdGhpcy5kaXNwbGF5VGlwKHRpcCk7XG4gICAgICAgIHRoaXMuZGlzcGxheVRvdGFsKHRvdGFsKTtcbiAgICB9XG5cbiAgICBnZXRCaWxsKCkge1xuICAgICAgICBjb25zdCBiaWxsID0gdGhpcy5iaWxsQnRuLnZhbHVlO1xuICAgICAgICBpZiAoYmlsbCA9PT0gXCJcIiB8fCBiaWxsID09PSBOYU4gfHwgYmlsbCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYmlsbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldFBjdCgpIHtcbiAgICAgICAgY29uc3QgW2lucHV0Q2hlY2tlZF0gPSBBcnJheS5mcm9tKHRoaXMucmFkaW9JbnB1dHNCdG5zKS5maWx0ZXIoXG4gICAgICAgICAgICAoaW5wdXQpID0+IGlucHV0LmNoZWNrZWQgPT09IHRydWVcbiAgICAgICAgKTtcbiAgICAgICAgaWYgKGlucHV0Q2hlY2tlZCkge1xuICAgICAgICAgICAgY29uc3QgcGN0ID0gaW5wdXRDaGVja2VkLmdldEF0dHJpYnV0ZShcInZhbHVlXCIpO1xuICAgICAgICAgICAgcmV0dXJuIHBjdDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWlucHV0Q2hlY2tlZCkge1xuICAgICAgICAgICAgY29uc3QgY3VzdG9tID1cbiAgICAgICAgICAgICAgICB0aGlzLmZpZWxkc2V0Lmxhc3RFbGVtZW50Q2hpbGQubGFzdEVsZW1lbnRDaGlsZC52YWx1ZTtcbiAgICAgICAgICAgIGlmIChjdXN0b20gIT09IFwiXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3VzdG9tO1xuICAgICAgICAgICAgfSBlbHNlIHJldHVybiAwO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0UGVvcGxlKCkge1xuICAgICAgICBjb25zdCBwZW9wbGUgPSB0aGlzLnBlb3BsZUJ0bi52YWx1ZTtcbiAgICAgICAgaWYgKHBlb3BsZSA9PT0gXCJcIikge1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gcGVvcGxlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY3VzdG9tQnV0dG9uKCkge1xuICAgICAgICB0aGlzLnJhZGlvSW5wdXRzQnRucy5mb3JFYWNoKChpbnB1dCkgPT4gKGlucHV0LmNoZWNrZWQgPSBmYWxzZSkpO1xuICAgIH1cblxuICAgIGNhbGNUaXAoYmlsbCwgcGN0LCBwZW9wbGUpIHtcbiAgICAgICAgaWYgKHBjdCA9PT0gMCB8fCBwZW9wbGUgPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgdGlwID0gKGJpbGwgKiBwY3QpIC8gMTAwIC8gcGVvcGxlO1xuICAgICAgICAgICAgY29uc3QgdGlwUm91bmQgPSBNYXRoLnJvdW5kKHRpcCAqIDEwMCkgLyAxMDA7XG4gICAgICAgICAgICByZXR1cm4gdGlwUm91bmQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjYWxjVG90YWwoYmlsbCwgcGN0LCBwZW9wbGUpIHtcbiAgICAgICAgaWYgKGJpbGwgPT09IDApIHtcbiAgICAgICAgICAgIGNvbnN0IHRvdGFsID0gMDtcbiAgICAgICAgICAgIHJldHVybiB0b3RhbDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwZW9wbGUgPT09IDAgfHwgcGVvcGxlID09PSBcIlwiKSB7XG4gICAgICAgICAgICBjb25zdCB0b3RhbCA9ICtiaWxsO1xuICAgICAgICAgICAgcmV0dXJuIHRvdGFsO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHBjdCA9PT0gMCAmJiBwZW9wbGUgPiAwKSB7XG4gICAgICAgICAgICBjb25zdCB0b3RhbCA9ICtiaWxsIC8gK3Blb3BsZTtcbiAgICAgICAgICAgIGNvbnN0IHRvdGFsUm91bmQgPSBNYXRoLnJvdW5kKHRvdGFsICogMTAwKSAvIDEwMDtcbiAgICAgICAgICAgIHJldHVybiB0b3RhbFJvdW5kO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwZW9wbGUgPT09IDAgJiYgcGN0ID4gMCkge1xuICAgICAgICAgICAgY29uc3QgdG90YWwgPSAwO1xuICAgICAgICAgICAgcmV0dXJuIHRvdGFsO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHBjdCA9PT0gMCAmJiBwZW9wbGUgPT09IDApIHtcbiAgICAgICAgICAgIGNvbnN0IHRvdGFsID0gMDtcbiAgICAgICAgICAgIHJldHVybiB0b3RhbDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHRpcCA9IHRoaXMuY2FsY1RpcCgrYmlsbCwgK3BjdCwgK3Blb3BsZSk7XG4gICAgICAgICAgICBjb25zdCB0b3RhbCA9IGJpbGwgLyBwZW9wbGUgKyArdGlwO1xuICAgICAgICAgICAgY29uc3QgdG90YWxSb3VuZCA9IE1hdGgucm91bmQodG90YWwgKiAxMDApIC8gMTAwO1xuICAgICAgICAgICAgcmV0dXJuIHRvdGFsUm91bmQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb252ZXJ0VG9EaXNwbGF5KG51bSkge1xuICAgICAgICBjb25zdCBuZXdOdW0gPSBudW0udG9GaXhlZChcbiAgICAgICAgICAgIE1hdGgubWF4KCgobnVtICsgXCJcIikuc3BsaXQoXCIuXCIpWzFdIHx8IFwiXCIpLmxlbmd0aCwgMilcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIG5ld051bTtcbiAgICB9XG5cbiAgICBkaXNwbGF5VGlwKHRpcCkge1xuICAgICAgICBjb25zdCB0aXBEaXNwbGF5ID0gdGhpcy5jb252ZXJ0VG9EaXNwbGF5KHRpcCk7XG4gICAgICAgIHRoaXMudGlwQW1vdW50RGlzcGxheS5pbm5lclRleHQgPSBgJCR7dGlwRGlzcGxheX1gO1xuICAgIH1cblxuICAgIGRpc3BsYXlUb3RhbCh0b3RhbCkge1xuICAgICAgICBjb25zdCB0b3RhbERpc3BsYXkgPSB0aGlzLmNvbnZlcnRUb0Rpc3BsYXkodG90YWwpO1xuICAgICAgICB0aGlzLnRvdGFsQW1vdW50RGlzcGxheS5pbm5lclRleHQgPSBgJCR7dG90YWxEaXNwbGF5fWA7XG4gICAgfVxuXG4gICAgcmVzZXQoKSB7XG4gICAgICAgIHRoaXMuYmlsbEJ0bi52YWx1ZSA9IFwiXCI7XG4gICAgICAgIHRoaXMucmFkaW9JbnB1dHNCdG5zLmZvckVhY2goKGlucHV0KSA9PiAoaW5wdXQuY2hlY2tlZCA9IGZhbHNlKSk7XG4gICAgICAgIHRoaXMuY3VzdG9tSW5wdXRCdG4udmFsdWUgPSBcIlwiO1xuICAgICAgICB0aGlzLnBlb3BsZUJ0bi52YWx1ZSA9IFwiXCI7XG4gICAgICAgIHRoaXMudGlwQW1vdW50RGlzcGxheS5pbm5lclRleHQgPSBcIiQwLjAwXCI7XG4gICAgICAgIHRoaXMudG90YWxBbW91bnREaXNwbGF5LmlubmVyVGV4dCA9IFwiJDAuMDBcIjtcbiAgICB9XG59XG4iLCJpbXBvcnQoXCIuLy4uL3Nhc3MvbWFpbi5zY3NzXCIpO1xuXG5pbXBvcnQgQ2FsY3VsYXRvciBmcm9tIFwiLi9jYWxjLmpzXCI7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGluaXQpO1xuXG5mdW5jdGlvbiBpbml0KCkge1xuICAgIGNvbnN0IGNhbGN1bGF0b3IgPSBuZXcgQ2FsY3VsYXRvcigpO1xuICAgIC8qY29uc3QgcmVzZXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhbGMtb3V0cHV0X19yZXNldFwiKTtcbiAgICByZXNldEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgY2FsY3VsYXRvci5yZXNldCk7XG4gICAgY29uc3QgYmlsbEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FsYy1pbnB1dF9faW5wdXQtYmlsbFwiKTtcbiAgICBiaWxsQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgIGNhbGN1bGF0b3IuY2FsY3VsYXRlKGNhbGN1bGF0b3IuZ2V0UGN0KCkpO1xuICAgIH0pO1xuICAgIGNvbnN0IHBlb3BsZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FsYy1pbnB1dF9faW5wdXQtcGVvcGxlXCIpO1xuICAgIHBlb3BsZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICBjYWxjdWxhdG9yLmNhbGN1bGF0ZShjYWxjdWxhdG9yLmdldFBjdCgpKTtcbiAgICB9KTtcbiAgICBjb25zdCByYWRpb0lucHV0c0J0bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmNhbGMtaW5wdXRfX3NlbGVjdGlvblwiKTtcbiAgICBBcnJheS5mcm9tKHJhZGlvSW5wdXRzQnRucykuZm9yRWFjaCgoaW5wdXQpID0+XG4gICAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICBjYWxjdWxhdG9yLmNhbGN1bGF0ZShjYWxjdWxhdG9yLmdldFBjdCgpKTtcbiAgICAgICAgfSlcbiAgICApO1xuICAgIGNvbnN0IGN1c3RvbUlucHV0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYWxjLWlucHV0X190ZXh0YXJlYVwiKTtcbiAgICBjdXN0b21JbnB1dEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICBjYWxjdWxhdG9yLmN1c3RvbUJ1dHRvbigpO1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGN1c3RvbUlucHV0QnRuLnZhbHVlO1xuICAgICAgICBjYWxjdWxhdG9yLmNhbGN1bGF0ZSh2YWx1ZSk7XG4gICAgfSk7Ki9cbn1cbiJdLCJuYW1lcyI6WyJpblByb2dyZXNzIiwiZGF0YVdlYnBhY2tQcmVmaXgiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaWQiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImYiLCJlIiwiY2h1bmtJZCIsIlByb21pc2UiLCJhbGwiLCJrZXlzIiwicmVkdWNlIiwicHJvbWlzZXMiLCJ1Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImwiLCJ1cmwiLCJkb25lIiwicHVzaCIsInNjcmlwdCIsIm5lZWRBdHRhY2giLCJzY3JpcHRzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImkiLCJsZW5ndGgiLCJzIiwiZ2V0QXR0cmlidXRlIiwiY3JlYXRlRWxlbWVudCIsImNoYXJzZXQiLCJ0aW1lb3V0IiwibmMiLCJzZXRBdHRyaWJ1dGUiLCJzcmMiLCJvblNjcmlwdENvbXBsZXRlIiwicHJldiIsImV2ZW50Iiwib25lcnJvciIsIm9ubG9hZCIsImNsZWFyVGltZW91dCIsImRvbmVGbnMiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJmb3JFYWNoIiwiZm4iLCJzZXRUaW1lb3V0IiwiYmluZCIsInR5cGUiLCJ0YXJnZXQiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJsb2NhdGlvbiIsImhyZWYiLCJpbnN0YWxsZWRDaHVua3MiLCJqIiwiaW5zdGFsbGVkQ2h1bmtEYXRhIiwicHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJlcnJvciIsIkVycm9yIiwiZXJyb3JUeXBlIiwicmVhbFNyYyIsIm1lc3NhZ2UiLCJuYW1lIiwicmVxdWVzdCIsIndlYnBhY2tKc29ucENhbGxiYWNrIiwicGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24iLCJkYXRhIiwiY2h1bmtJZHMiLCJtb3JlTW9kdWxlcyIsInJ1bnRpbWUiLCJjaHVua0xvYWRpbmdHbG9iYWwiLCJDYWxjdWxhdG9yIiwiY29uc3RydWN0b3IiLCJ0aGlzIiwidmFycyIsInNldHVwRXZlbnRzIiwic2VsZWN0b3JzIiwicmVzZXRCdG4iLCJiaWxsQnRuIiwicGVvcGxlQnRuIiwicmFkaW9JbnB1dHNCdG5zIiwiY3VzdG9tSW5wdXRCdG4iLCJmaWVsZHNldCIsInRpcEFtb3VudERpc3BsYXkiLCJ0b3RhbEFtb3VudERpc3BsYXkiLCJxdWVyeVNlbGVjdG9yIiwicXVlcnlTZWxlY3RvckFsbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZXNldCIsImNhbGN1bGF0ZSIsImdldFBjdCIsIkFycmF5IiwiZnJvbSIsImlucHV0IiwiY3VzdG9tQnV0dG9uIiwiY2FsY1BjdEZuIiwiYmlsbCIsIk51bWJlciIsImdldEJpbGwiLCJwY3QiLCJwZW9wbGUiLCJnZXRQZW9wbGUiLCJ0aXAiLCJjYWxjVGlwIiwidG90YWwiLCJjYWxjVG90YWwiLCJkaXNwbGF5VGlwIiwiZGlzcGxheVRvdGFsIiwiTmFOIiwiaW5wdXRDaGVja2VkIiwiZmlsdGVyIiwiY2hlY2tlZCIsImN1c3RvbSIsImxhc3RFbGVtZW50Q2hpbGQiLCJNYXRoIiwicm91bmQiLCJjb252ZXJ0VG9EaXNwbGF5IiwibnVtIiwidG9GaXhlZCIsIm1heCIsInNwbGl0IiwidGlwRGlzcGxheSIsImlubmVyVGV4dCIsInRvdGFsRGlzcGxheSJdLCJzb3VyY2VSb290IjoiIn0=